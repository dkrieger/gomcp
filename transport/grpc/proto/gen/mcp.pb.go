// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: mcp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InitializeRequest contains information to initialize a new MCP session
type InitializeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientVersion string                 `protobuf:"bytes,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *InitializeRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *InitializeRequest) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *InitializeRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// InitializeResponse contains server response to initialization
type InitializeResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SessionId          string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ServerVersion      string                 `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	Capabilities       map[string]string      `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SupportedFunctions []string               `protobuf:"bytes,4,rep,name=supported_functions,json=supportedFunctions,proto3" json:"supported_functions,omitempty"`
	Success            bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	Error              *ErrorInfo             `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *InitializeResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitializeResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *InitializeResponse) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *InitializeResponse) GetSupportedFunctions() []string {
	if x != nil {
		return x.SupportedFunctions
	}
	return nil
}

func (x *InitializeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitializeResponse) GetError() *ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

// MCPMessage is a generic MCP protocol message
type MCPMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SessionId string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*MCPMessage_TextContent
	//	*MCPMessage_BinaryContent
	//	*MCPMessage_FunctionRequest
	//	*MCPMessage_FunctionResponse
	//	*MCPMessage_Error
	Content       isMCPMessage_Content `protobuf_oneof:"content"`
	Metadata      map[string]string    `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     uint64               `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MCPMessage) Reset() {
	*x = MCPMessage{}
	mi := &file_mcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCPMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCPMessage) ProtoMessage() {}

func (x *MCPMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCPMessage.ProtoReflect.Descriptor instead.
func (*MCPMessage) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{2}
}

func (x *MCPMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MCPMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MCPMessage) GetContent() isMCPMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MCPMessage) GetTextContent() string {
	if x != nil {
		if x, ok := x.Content.(*MCPMessage_TextContent); ok {
			return x.TextContent
		}
	}
	return ""
}

func (x *MCPMessage) GetBinaryContent() []byte {
	if x != nil {
		if x, ok := x.Content.(*MCPMessage_BinaryContent); ok {
			return x.BinaryContent
		}
	}
	return nil
}

func (x *MCPMessage) GetFunctionRequest() *FunctionRequest {
	if x != nil {
		if x, ok := x.Content.(*MCPMessage_FunctionRequest); ok {
			return x.FunctionRequest
		}
	}
	return nil
}

func (x *MCPMessage) GetFunctionResponse() *FunctionResponse {
	if x != nil {
		if x, ok := x.Content.(*MCPMessage_FunctionResponse); ok {
			return x.FunctionResponse
		}
	}
	return nil
}

func (x *MCPMessage) GetError() *ErrorInfo {
	if x != nil {
		if x, ok := x.Content.(*MCPMessage_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *MCPMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MCPMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type isMCPMessage_Content interface {
	isMCPMessage_Content()
}

type MCPMessage_TextContent struct {
	TextContent string `protobuf:"bytes,3,opt,name=text_content,json=textContent,proto3,oneof"`
}

type MCPMessage_BinaryContent struct {
	BinaryContent []byte `protobuf:"bytes,4,opt,name=binary_content,json=binaryContent,proto3,oneof"`
}

type MCPMessage_FunctionRequest struct {
	FunctionRequest *FunctionRequest `protobuf:"bytes,5,opt,name=function_request,json=functionRequest,proto3,oneof"`
}

type MCPMessage_FunctionResponse struct {
	FunctionResponse *FunctionResponse `protobuf:"bytes,6,opt,name=function_response,json=functionResponse,proto3,oneof"`
}

type MCPMessage_Error struct {
	Error *ErrorInfo `protobuf:"bytes,7,opt,name=error,proto3,oneof"`
}

func (*MCPMessage_TextContent) isMCPMessage_Content() {}

func (*MCPMessage_BinaryContent) isMCPMessage_Content() {}

func (*MCPMessage_FunctionRequest) isMCPMessage_Content() {}

func (*MCPMessage_FunctionResponse) isMCPMessage_Content() {}

func (*MCPMessage_Error) isMCPMessage_Content() {}

// FunctionRequest contains information to execute a function
type FunctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionId    string                 `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	Parameters    map[string]*Value      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	IsStreaming   bool                   `protobuf:"varint,4,opt,name=is_streaming,json=isStreaming,proto3" json:"is_streaming,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionRequest) Reset() {
	*x = FunctionRequest{}
	mi := &file_mcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionRequest) ProtoMessage() {}

func (x *FunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionRequest.ProtoReflect.Descriptor instead.
func (*FunctionRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{3}
}

func (x *FunctionRequest) GetFunctionId() string {
	if x != nil {
		return x.FunctionId
	}
	return ""
}

func (x *FunctionRequest) GetParameters() map[string]*Value {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *FunctionRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FunctionRequest) GetIsStreaming() bool {
	if x != nil {
		return x.IsStreaming
	}
	return false
}

// FunctionResponse contains the result of a function execution
type FunctionResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	FunctionId string                 `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	RequestId  string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*FunctionResponse_ResultValue
	//	*FunctionResponse_Error
	Result        isFunctionResponse_Result `protobuf_oneof:"result"`
	IsPartial     bool                      `protobuf:"varint,5,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"` // For streaming responses
	IsFinal       bool                      `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`       // Final message in a streaming response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionResponse) Reset() {
	*x = FunctionResponse{}
	mi := &file_mcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionResponse) ProtoMessage() {}

func (x *FunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionResponse.ProtoReflect.Descriptor instead.
func (*FunctionResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{4}
}

func (x *FunctionResponse) GetFunctionId() string {
	if x != nil {
		return x.FunctionId
	}
	return ""
}

func (x *FunctionResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FunctionResponse) GetResult() isFunctionResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *FunctionResponse) GetResultValue() *Value {
	if x != nil {
		if x, ok := x.Result.(*FunctionResponse_ResultValue); ok {
			return x.ResultValue
		}
	}
	return nil
}

func (x *FunctionResponse) GetError() *ErrorInfo {
	if x != nil {
		if x, ok := x.Result.(*FunctionResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *FunctionResponse) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *FunctionResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type isFunctionResponse_Result interface {
	isFunctionResponse_Result()
}

type FunctionResponse_ResultValue struct {
	ResultValue *Value `protobuf:"bytes,3,opt,name=result_value,json=resultValue,proto3,oneof"`
}

type FunctionResponse_Error struct {
	Error *ErrorInfo `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*FunctionResponse_ResultValue) isFunctionResponse_Result() {}

func (*FunctionResponse_Error) isFunctionResponse_Result() {}

// Value represents a typed value
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Value_StringValue
	//	*Value_BoolValue
	//	*Value_NumberValue
	//	*Value_ArrayValue
	//	*Value_ObjectValue
	//	*Value_BinaryValue
	//	*Value_NullValue
	Kind          isValue_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_mcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{5}
}

func (x *Value) GetKind() isValue_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Value) GetStringValue() string {
	if x != nil {
		if x, ok := x.Kind.(*Value_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Value) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Kind.(*Value_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *Value) GetNumberValue() float64 {
	if x != nil {
		if x, ok := x.Kind.(*Value_NumberValue); ok {
			return x.NumberValue
		}
	}
	return 0
}

func (x *Value) GetArrayValue() *Array {
	if x != nil {
		if x, ok := x.Kind.(*Value_ArrayValue); ok {
			return x.ArrayValue
		}
	}
	return nil
}

func (x *Value) GetObjectValue() *Object {
	if x != nil {
		if x, ok := x.Kind.(*Value_ObjectValue); ok {
			return x.ObjectValue
		}
	}
	return nil
}

func (x *Value) GetBinaryValue() []byte {
	if x != nil {
		if x, ok := x.Kind.(*Value_BinaryValue); ok {
			return x.BinaryValue
		}
	}
	return nil
}

func (x *Value) GetNullValue() bool {
	if x != nil {
		if x, ok := x.Kind.(*Value_NullValue); ok {
			return x.NullValue
		}
	}
	return false
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,3,opt,name=number_value,json=numberValue,proto3,oneof"`
}

type Value_ArrayValue struct {
	ArrayValue *Array `protobuf:"bytes,4,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type Value_ObjectValue struct {
	ObjectValue *Object `protobuf:"bytes,5,opt,name=object_value,json=objectValue,proto3,oneof"`
}

type Value_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,6,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

type Value_NullValue struct {
	NullValue bool `protobuf:"varint,7,opt,name=null_value,json=nullValue,proto3,oneof"` // Must be set to true if used
}

func (*Value_StringValue) isValue_Kind() {}

func (*Value_BoolValue) isValue_Kind() {}

func (*Value_NumberValue) isValue_Kind() {}

func (*Value_ArrayValue) isValue_Kind() {}

func (*Value_ObjectValue) isValue_Kind() {}

func (*Value_BinaryValue) isValue_Kind() {}

func (*Value_NullValue) isValue_Kind() {}

// Array represents an ordered list of values
type Array struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*Value               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Array) Reset() {
	*x = Array{}
	mi := &file_mcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{6}
}

func (x *Array) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// Object represents a map of string keys to values
type Object struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        map[string]*Value      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_mcp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{7}
}

func (x *Object) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

// ErrorInfo contains error details
type ErrorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_mcp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{8}
}

func (x *ErrorInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// EventStreamRequest initiates an event stream
type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EventTypes    []string               `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"` // Optional filter for specific event types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_mcp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{9}
}

func (x *EventStreamRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EventStreamRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// EventMessage represents a server-to-client event
type EventMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Data          map[string]*Value      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventMessage) Reset() {
	*x = EventMessage{}
	mi := &file_mcp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessage) ProtoMessage() {}

func (x *EventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessage.ProtoReflect.Descriptor instead.
func (*EventMessage) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{10}
}

func (x *EventMessage) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EventMessage) GetData() map[string]*Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EventMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// EndSessionRequest terminates an MCP session
type EndSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndSessionRequest) Reset() {
	*x = EndSessionRequest{}
	mi := &file_mcp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndSessionRequest) ProtoMessage() {}

func (x *EndSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndSessionRequest.ProtoReflect.Descriptor instead.
func (*EndSessionRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{11}
}

func (x *EndSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EndSessionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// EndSessionResponse confirms session termination
type EndSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorInfo             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndSessionResponse) Reset() {
	*x = EndSessionResponse{}
	mi := &file_mcp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndSessionResponse) ProtoMessage() {}

func (x *EndSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndSessionResponse.ProtoReflect.Descriptor instead.
func (*EndSessionResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{12}
}

func (x *EndSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EndSessionResponse) GetError() *ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_mcp_proto protoreflect.FileDescriptor

const file_mcp_proto_rawDesc = "" +
	"\n" +
	"\tmcp.proto\x12\x03mcp\"\xe5\x02\n" +
	"\x11InitializeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12%\n" +
	"\x0eclient_version\x18\x02 \x01(\tR\rclientVersion\x12L\n" +
	"\fcapabilities\x18\x03 \x03(\v2(.mcp.InitializeRequest.CapabilitiesEntryR\fcapabilities\x12@\n" +
	"\bmetadata\x18\x04 \x03(\v2$.mcp.InitializeRequest.MetadataEntryR\bmetadata\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdb\x02\n" +
	"\x12InitializeResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12%\n" +
	"\x0eserver_version\x18\x02 \x01(\tR\rserverVersion\x12M\n" +
	"\fcapabilities\x18\x03 \x03(\v2).mcp.InitializeResponse.CapabilitiesEntryR\fcapabilities\x12/\n" +
	"\x13supported_functions\x18\x04 \x03(\tR\x12supportedFunctions\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12$\n" +
	"\x05error\x18\x06 \x01(\v2\x0e.mcp.ErrorInfoR\x05error\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdb\x03\n" +
	"\n" +
	"MCPMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12#\n" +
	"\ftext_content\x18\x03 \x01(\tH\x00R\vtextContent\x12'\n" +
	"\x0ebinary_content\x18\x04 \x01(\fH\x00R\rbinaryContent\x12A\n" +
	"\x10function_request\x18\x05 \x01(\v2\x14.mcp.FunctionRequestH\x00R\x0ffunctionRequest\x12D\n" +
	"\x11function_response\x18\x06 \x01(\v2\x15.mcp.FunctionResponseH\x00R\x10functionResponse\x12&\n" +
	"\x05error\x18\a \x01(\v2\x0e.mcp.ErrorInfoH\x00R\x05error\x129\n" +
	"\bmetadata\x18\b \x03(\v2\x1d.mcp.MCPMessage.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\x04R\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\t\n" +
	"\acontent\"\x85\x02\n" +
	"\x0fFunctionRequest\x12\x1f\n" +
	"\vfunction_id\x18\x01 \x01(\tR\n" +
	"functionId\x12D\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2$.mcp.FunctionRequest.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12!\n" +
	"\fis_streaming\x18\x04 \x01(\bR\visStreaming\x1aI\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".mcp.ValueR\x05value:\x028\x01\"\xef\x01\n" +
	"\x10FunctionResponse\x12\x1f\n" +
	"\vfunction_id\x18\x01 \x01(\tR\n" +
	"functionId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12/\n" +
	"\fresult_value\x18\x03 \x01(\v2\n" +
	".mcp.ValueH\x00R\vresultValue\x12&\n" +
	"\x05error\x18\x04 \x01(\v2\x0e.mcp.ErrorInfoH\x00R\x05error\x12\x1d\n" +
	"\n" +
	"is_partial\x18\x05 \x01(\bR\tisPartial\x12\x19\n" +
	"\bis_final\x18\x06 \x01(\bR\aisFinalB\b\n" +
	"\x06result\"\xa1\x02\n" +
	"\x05Value\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x02 \x01(\bH\x00R\tboolValue\x12#\n" +
	"\fnumber_value\x18\x03 \x01(\x01H\x00R\vnumberValue\x12-\n" +
	"\varray_value\x18\x04 \x01(\v2\n" +
	".mcp.ArrayH\x00R\n" +
	"arrayValue\x120\n" +
	"\fobject_value\x18\x05 \x01(\v2\v.mcp.ObjectH\x00R\vobjectValue\x12#\n" +
	"\fbinary_value\x18\x06 \x01(\fH\x00R\vbinaryValue\x12\x1f\n" +
	"\n" +
	"null_value\x18\a \x01(\bH\x00R\tnullValueB\x06\n" +
	"\x04kind\"+\n" +
	"\x05Array\x12\"\n" +
	"\x06values\x18\x01 \x03(\v2\n" +
	".mcp.ValueR\x06values\"\x80\x01\n" +
	"\x06Object\x12/\n" +
	"\x06fields\x18\x01 \x03(\v2\x17.mcp.Object.FieldsEntryR\x06fields\x1aE\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".mcp.ValueR\x05value:\x028\x01\"M\n" +
	"\tErrorInfo\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\"T\n" +
	"\x12EventStreamRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vevent_types\x18\x02 \x03(\tR\n" +
	"eventTypes\"\xe0\x01\n" +
	"\fEventMessage\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12/\n" +
	"\x04data\x18\x03 \x03(\v2\x1b.mcp.EventMessage.DataEntryR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x1aC\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".mcp.ValueR\x05value:\x028\x01\"J\n" +
	"\x11EndSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"T\n" +
	"\x12EndSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12$\n" +
	"\x05error\x18\x02 \x01(\v2\x0e.mcp.ErrorInfoR\x05error2\xc3\x02\n" +
	"\x03MCP\x12?\n" +
	"\n" +
	"Initialize\x12\x16.mcp.InitializeRequest\x1a\x17.mcp.InitializeResponse\"\x00\x128\n" +
	"\x0eStreamMessages\x12\x0f.mcp.MCPMessage\x1a\x0f.mcp.MCPMessage\"\x00(\x010\x01\x12>\n" +
	"\fStreamEvents\x12\x17.mcp.EventStreamRequest\x1a\x11.mcp.EventMessage\"\x000\x01\x12@\n" +
	"\x0fExecuteFunction\x12\x14.mcp.FunctionRequest\x1a\x15.mcp.FunctionResponse\"\x00\x12?\n" +
	"\n" +
	"EndSession\x12\x16.mcp.EndSessionRequest\x1a\x17.mcp.EndSessionResponse\"\x00B2Z0github.com/localrivet/gomcp/transport/grpc/protob\x06proto3"

var (
	file_mcp_proto_rawDescOnce sync.Once
	file_mcp_proto_rawDescData []byte
)

func file_mcp_proto_rawDescGZIP() []byte {
	file_mcp_proto_rawDescOnce.Do(func() {
		file_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)))
	})
	return file_mcp_proto_rawDescData
}

var file_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_mcp_proto_goTypes = []any{
	(*InitializeRequest)(nil),  // 0: mcp.InitializeRequest
	(*InitializeResponse)(nil), // 1: mcp.InitializeResponse
	(*MCPMessage)(nil),         // 2: mcp.MCPMessage
	(*FunctionRequest)(nil),    // 3: mcp.FunctionRequest
	(*FunctionResponse)(nil),   // 4: mcp.FunctionResponse
	(*Value)(nil),              // 5: mcp.Value
	(*Array)(nil),              // 6: mcp.Array
	(*Object)(nil),             // 7: mcp.Object
	(*ErrorInfo)(nil),          // 8: mcp.ErrorInfo
	(*EventStreamRequest)(nil), // 9: mcp.EventStreamRequest
	(*EventMessage)(nil),       // 10: mcp.EventMessage
	(*EndSessionRequest)(nil),  // 11: mcp.EndSessionRequest
	(*EndSessionResponse)(nil), // 12: mcp.EndSessionResponse
	nil,                        // 13: mcp.InitializeRequest.CapabilitiesEntry
	nil,                        // 14: mcp.InitializeRequest.MetadataEntry
	nil,                        // 15: mcp.InitializeResponse.CapabilitiesEntry
	nil,                        // 16: mcp.MCPMessage.MetadataEntry
	nil,                        // 17: mcp.FunctionRequest.ParametersEntry
	nil,                        // 18: mcp.Object.FieldsEntry
	nil,                        // 19: mcp.EventMessage.DataEntry
}
var file_mcp_proto_depIdxs = []int32{
	13, // 0: mcp.InitializeRequest.capabilities:type_name -> mcp.InitializeRequest.CapabilitiesEntry
	14, // 1: mcp.InitializeRequest.metadata:type_name -> mcp.InitializeRequest.MetadataEntry
	15, // 2: mcp.InitializeResponse.capabilities:type_name -> mcp.InitializeResponse.CapabilitiesEntry
	8,  // 3: mcp.InitializeResponse.error:type_name -> mcp.ErrorInfo
	3,  // 4: mcp.MCPMessage.function_request:type_name -> mcp.FunctionRequest
	4,  // 5: mcp.MCPMessage.function_response:type_name -> mcp.FunctionResponse
	8,  // 6: mcp.MCPMessage.error:type_name -> mcp.ErrorInfo
	16, // 7: mcp.MCPMessage.metadata:type_name -> mcp.MCPMessage.MetadataEntry
	17, // 8: mcp.FunctionRequest.parameters:type_name -> mcp.FunctionRequest.ParametersEntry
	5,  // 9: mcp.FunctionResponse.result_value:type_name -> mcp.Value
	8,  // 10: mcp.FunctionResponse.error:type_name -> mcp.ErrorInfo
	6,  // 11: mcp.Value.array_value:type_name -> mcp.Array
	7,  // 12: mcp.Value.object_value:type_name -> mcp.Object
	5,  // 13: mcp.Array.values:type_name -> mcp.Value
	18, // 14: mcp.Object.fields:type_name -> mcp.Object.FieldsEntry
	19, // 15: mcp.EventMessage.data:type_name -> mcp.EventMessage.DataEntry
	8,  // 16: mcp.EndSessionResponse.error:type_name -> mcp.ErrorInfo
	5,  // 17: mcp.FunctionRequest.ParametersEntry.value:type_name -> mcp.Value
	5,  // 18: mcp.Object.FieldsEntry.value:type_name -> mcp.Value
	5,  // 19: mcp.EventMessage.DataEntry.value:type_name -> mcp.Value
	0,  // 20: mcp.MCP.Initialize:input_type -> mcp.InitializeRequest
	2,  // 21: mcp.MCP.StreamMessages:input_type -> mcp.MCPMessage
	9,  // 22: mcp.MCP.StreamEvents:input_type -> mcp.EventStreamRequest
	3,  // 23: mcp.MCP.ExecuteFunction:input_type -> mcp.FunctionRequest
	11, // 24: mcp.MCP.EndSession:input_type -> mcp.EndSessionRequest
	1,  // 25: mcp.MCP.Initialize:output_type -> mcp.InitializeResponse
	2,  // 26: mcp.MCP.StreamMessages:output_type -> mcp.MCPMessage
	10, // 27: mcp.MCP.StreamEvents:output_type -> mcp.EventMessage
	4,  // 28: mcp.MCP.ExecuteFunction:output_type -> mcp.FunctionResponse
	12, // 29: mcp.MCP.EndSession:output_type -> mcp.EndSessionResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_mcp_proto_init() }
func file_mcp_proto_init() {
	if File_mcp_proto != nil {
		return
	}
	file_mcp_proto_msgTypes[2].OneofWrappers = []any{
		(*MCPMessage_TextContent)(nil),
		(*MCPMessage_BinaryContent)(nil),
		(*MCPMessage_FunctionRequest)(nil),
		(*MCPMessage_FunctionResponse)(nil),
		(*MCPMessage_Error)(nil),
	}
	file_mcp_proto_msgTypes[4].OneofWrappers = []any{
		(*FunctionResponse_ResultValue)(nil),
		(*FunctionResponse_Error)(nil),
	}
	file_mcp_proto_msgTypes[5].OneofWrappers = []any{
		(*Value_StringValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_NumberValue)(nil),
		(*Value_ArrayValue)(nil),
		(*Value_ObjectValue)(nil),
		(*Value_BinaryValue)(nil),
		(*Value_NullValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcp_proto_goTypes,
		DependencyIndexes: file_mcp_proto_depIdxs,
		MessageInfos:      file_mcp_proto_msgTypes,
	}.Build()
	File_mcp_proto = out.File
	file_mcp_proto_goTypes = nil
	file_mcp_proto_depIdxs = nil
}
