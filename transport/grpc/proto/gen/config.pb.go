// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthConfig_AuthType int32

const (
	AuthConfig_NONE    AuthConfig_AuthType = 0
	AuthConfig_API_KEY AuthConfig_AuthType = 1
	AuthConfig_OAUTH2  AuthConfig_AuthType = 2
	AuthConfig_JWT     AuthConfig_AuthType = 3
	AuthConfig_MTLS    AuthConfig_AuthType = 4
	AuthConfig_CUSTOM  AuthConfig_AuthType = 5
)

// Enum value maps for AuthConfig_AuthType.
var (
	AuthConfig_AuthType_name = map[int32]string{
		0: "NONE",
		1: "API_KEY",
		2: "OAUTH2",
		3: "JWT",
		4: "MTLS",
		5: "CUSTOM",
	}
	AuthConfig_AuthType_value = map[string]int32{
		"NONE":    0,
		"API_KEY": 1,
		"OAUTH2":  2,
		"JWT":     3,
		"MTLS":    4,
		"CUSTOM":  5,
	}
)

func (x AuthConfig_AuthType) Enum() *AuthConfig_AuthType {
	p := new(AuthConfig_AuthType)
	*p = x
	return p
}

func (x AuthConfig_AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthConfig_AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (AuthConfig_AuthType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x AuthConfig_AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthConfig_AuthType.Descriptor instead.
func (AuthConfig_AuthType) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2, 0}
}

// TransportConfig defines configuration options for the gRPC transport
type TransportConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network configuration
	ServerAddress string     `protobuf:"bytes,1,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"` // Host:port for the server
	Port          int32      `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                       // Server port (if not specified in address)
	UseTls        bool       `protobuf:"varint,3,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`                     // Whether to use TLS
	TlsConfig     *TLSConfig `protobuf:"bytes,4,opt,name=tls_config,json=tlsConfig,proto3" json:"tls_config,omitempty"`             // TLS configuration
	// Connection settings
	MaxConnectionAttempts int32 `protobuf:"varint,5,opt,name=max_connection_attempts,json=maxConnectionAttempts,proto3" json:"max_connection_attempts,omitempty"` // Maximum connection attempts before failing
	ConnectionTimeoutMs   int32 `protobuf:"varint,6,opt,name=connection_timeout_ms,json=connectionTimeoutMs,proto3" json:"connection_timeout_ms,omitempty"`       // Connection timeout in milliseconds
	KeepAliveIntervalMs   int32 `protobuf:"varint,7,opt,name=keep_alive_interval_ms,json=keepAliveIntervalMs,proto3" json:"keep_alive_interval_ms,omitempty"`     // Keepalive interval in milliseconds
	KeepAliveTimeoutMs    int32 `protobuf:"varint,8,opt,name=keep_alive_timeout_ms,json=keepAliveTimeoutMs,proto3" json:"keep_alive_timeout_ms,omitempty"`        // Keepalive timeout in milliseconds
	// Stream settings
	MaxConcurrentStreams    int32 `protobuf:"varint,9,opt,name=max_concurrent_streams,json=maxConcurrentStreams,proto3" json:"max_concurrent_streams,omitempty"`             // Maximum number of concurrent streams
	MaxMessageSizeBytes     int32 `protobuf:"varint,10,opt,name=max_message_size_bytes,json=maxMessageSizeBytes,proto3" json:"max_message_size_bytes,omitempty"`             // Maximum message size in bytes
	InitialStreamBufferSize int32 `protobuf:"varint,11,opt,name=initial_stream_buffer_size,json=initialStreamBufferSize,proto3" json:"initial_stream_buffer_size,omitempty"` // Initial buffer size for streams
	// Authentication settings
	AuthConfig *AuthConfig `protobuf:"bytes,12,opt,name=auth_config,json=authConfig,proto3" json:"auth_config,omitempty"` // Authentication configuration
	// Retry settings
	RetryConfig *RetryConfig `protobuf:"bytes,13,opt,name=retry_config,json=retryConfig,proto3" json:"retry_config,omitempty"` // Retry configuration
	// Advanced options
	Metadata      map[string]string `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata to send with requests
	Options       map[string]string `protobuf:"bytes,15,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`   // Additional gRPC-specific options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransportConfig) Reset() {
	*x = TransportConfig{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportConfig) ProtoMessage() {}

func (x *TransportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportConfig.ProtoReflect.Descriptor instead.
func (*TransportConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *TransportConfig) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

func (x *TransportConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TransportConfig) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *TransportConfig) GetTlsConfig() *TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *TransportConfig) GetMaxConnectionAttempts() int32 {
	if x != nil {
		return x.MaxConnectionAttempts
	}
	return 0
}

func (x *TransportConfig) GetConnectionTimeoutMs() int32 {
	if x != nil {
		return x.ConnectionTimeoutMs
	}
	return 0
}

func (x *TransportConfig) GetKeepAliveIntervalMs() int32 {
	if x != nil {
		return x.KeepAliveIntervalMs
	}
	return 0
}

func (x *TransportConfig) GetKeepAliveTimeoutMs() int32 {
	if x != nil {
		return x.KeepAliveTimeoutMs
	}
	return 0
}

func (x *TransportConfig) GetMaxConcurrentStreams() int32 {
	if x != nil {
		return x.MaxConcurrentStreams
	}
	return 0
}

func (x *TransportConfig) GetMaxMessageSizeBytes() int32 {
	if x != nil {
		return x.MaxMessageSizeBytes
	}
	return 0
}

func (x *TransportConfig) GetInitialStreamBufferSize() int32 {
	if x != nil {
		return x.InitialStreamBufferSize
	}
	return 0
}

func (x *TransportConfig) GetAuthConfig() *AuthConfig {
	if x != nil {
		return x.AuthConfig
	}
	return nil
}

func (x *TransportConfig) GetRetryConfig() *RetryConfig {
	if x != nil {
		return x.RetryConfig
	}
	return nil
}

func (x *TransportConfig) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TransportConfig) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// TLSConfig defines TLS configuration options
type TLSConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertFile      string                 `protobuf:"bytes,1,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`                // Path to certificate file
	KeyFile       string                 `protobuf:"bytes,2,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`                   // Path to key file
	CaFile        string                 `protobuf:"bytes,3,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`                      // Path to CA certificate file
	VerifyClient  bool                   `protobuf:"varint,4,opt,name=verify_client,json=verifyClient,proto3" json:"verify_client,omitempty"`   // Whether to verify client certificates
	VerifyServer  bool                   `protobuf:"varint,5,opt,name=verify_server,json=verifyServer,proto3" json:"verify_server,omitempty"`   // Whether to verify server certificates
	ServerName    string                 `protobuf:"bytes,6,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`          // Server name for verification
	AlpnProtocols []string               `protobuf:"bytes,7,rep,name=alpn_protocols,json=alpnProtocols,proto3" json:"alpn_protocols,omitempty"` // ALPN protocols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *TLSConfig) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *TLSConfig) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *TLSConfig) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

func (x *TLSConfig) GetVerifyClient() bool {
	if x != nil {
		return x.VerifyClient
	}
	return false
}

func (x *TLSConfig) GetVerifyServer() bool {
	if x != nil {
		return x.VerifyServer
	}
	return false
}

func (x *TLSConfig) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *TLSConfig) GetAlpnProtocols() []string {
	if x != nil {
		return x.AlpnProtocols
	}
	return nil
}

// AuthConfig defines authentication configuration options
type AuthConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthType      AuthConfig_AuthType    `protobuf:"varint,1,opt,name=auth_type,json=authType,proto3,enum=mcp.AuthConfig_AuthType" json:"auth_type,omitempty"`                                                   // Authentication type
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                                                                                                       // Authentication token/key
	TokenHeader   string                 `protobuf:"bytes,3,opt,name=token_header,json=tokenHeader,proto3" json:"token_header,omitempty"`                                                                        // Header name for token
	Oauth2        *OAuth2Config          `protobuf:"bytes,4,opt,name=oauth2,proto3" json:"oauth2,omitempty"`                                                                                                     // OAuth2 configuration
	CustomAuth    map[string]string      `protobuf:"bytes,5,rep,name=custom_auth,json=customAuth,proto3" json:"custom_auth,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom authentication parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthConfig) Reset() {
	*x = AuthConfig{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig) ProtoMessage() {}

func (x *AuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *AuthConfig) GetAuthType() AuthConfig_AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthConfig_NONE
}

func (x *AuthConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthConfig) GetTokenHeader() string {
	if x != nil {
		return x.TokenHeader
	}
	return ""
}

func (x *AuthConfig) GetOauth2() *OAuth2Config {
	if x != nil {
		return x.Oauth2
	}
	return nil
}

func (x *AuthConfig) GetCustomAuth() map[string]string {
	if x != nil {
		return x.CustomAuth
	}
	return nil
}

// OAuth2Config defines OAuth2 configuration options
type OAuth2Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl      string                 `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Scopes        []string               `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuth2Config) Reset() {
	*x = OAuth2Config{}
	mi := &file_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuth2Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2Config) ProtoMessage() {}

func (x *OAuth2Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2Config.ProtoReflect.Descriptor instead.
func (*OAuth2Config) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *OAuth2Config) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth2Config) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth2Config) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuth2Config) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OAuth2Config) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

// RetryConfig defines retry configuration options
type RetryConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxRetries    int32                  `protobuf:"varint,1,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`           // Maximum number of retries
	BaseDelayMs   int32                  `protobuf:"varint,2,opt,name=base_delay_ms,json=baseDelayMs,proto3" json:"base_delay_ms,omitempty"`      // Base delay in milliseconds
	MaxDelayMs    int32                  `protobuf:"varint,3,opt,name=max_delay_ms,json=maxDelayMs,proto3" json:"max_delay_ms,omitempty"`         // Maximum delay in milliseconds
	Multiplier    float32                `protobuf:"fixed32,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`                            // Backoff multiplier
	StatusCodes   []int32                `protobuf:"varint,5,rep,packed,name=status_codes,json=statusCodes,proto3" json:"status_codes,omitempty"` // Status codes to retry on
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryConfig) Reset() {
	*x = RetryConfig{}
	mi := &file_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryConfig) ProtoMessage() {}

func (x *RetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryConfig.ProtoReflect.Descriptor instead.
func (*RetryConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *RetryConfig) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *RetryConfig) GetBaseDelayMs() int32 {
	if x != nil {
		return x.BaseDelayMs
	}
	return 0
}

func (x *RetryConfig) GetMaxDelayMs() int32 {
	if x != nil {
		return x.MaxDelayMs
	}
	return 0
}

func (x *RetryConfig) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *RetryConfig) GetStatusCodes() []int32 {
	if x != nil {
		return x.StatusCodes
	}
	return nil
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12\x03mcp\"\xed\x06\n" +
	"\x0fTransportConfig\x12%\n" +
	"\x0eserver_address\x18\x01 \x01(\tR\rserverAddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x17\n" +
	"\ause_tls\x18\x03 \x01(\bR\x06useTls\x12-\n" +
	"\n" +
	"tls_config\x18\x04 \x01(\v2\x0e.mcp.TLSConfigR\ttlsConfig\x126\n" +
	"\x17max_connection_attempts\x18\x05 \x01(\x05R\x15maxConnectionAttempts\x122\n" +
	"\x15connection_timeout_ms\x18\x06 \x01(\x05R\x13connectionTimeoutMs\x123\n" +
	"\x16keep_alive_interval_ms\x18\a \x01(\x05R\x13keepAliveIntervalMs\x121\n" +
	"\x15keep_alive_timeout_ms\x18\b \x01(\x05R\x12keepAliveTimeoutMs\x124\n" +
	"\x16max_concurrent_streams\x18\t \x01(\x05R\x14maxConcurrentStreams\x123\n" +
	"\x16max_message_size_bytes\x18\n" +
	" \x01(\x05R\x13maxMessageSizeBytes\x12;\n" +
	"\x1ainitial_stream_buffer_size\x18\v \x01(\x05R\x17initialStreamBufferSize\x120\n" +
	"\vauth_config\x18\f \x01(\v2\x0f.mcp.AuthConfigR\n" +
	"authConfig\x123\n" +
	"\fretry_config\x18\r \x01(\v2\x10.mcp.RetryConfigR\vretryConfig\x12>\n" +
	"\bmetadata\x18\x0e \x03(\v2\".mcp.TransportConfig.MetadataEntryR\bmetadata\x12;\n" +
	"\aoptions\x18\x0f \x03(\v2!.mcp.TransportConfig.OptionsEntryR\aoptions\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x01\n" +
	"\tTLSConfig\x12\x1b\n" +
	"\tcert_file\x18\x01 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x02 \x01(\tR\akeyFile\x12\x17\n" +
	"\aca_file\x18\x03 \x01(\tR\x06caFile\x12#\n" +
	"\rverify_client\x18\x04 \x01(\bR\fverifyClient\x12#\n" +
	"\rverify_server\x18\x05 \x01(\bR\fverifyServer\x12\x1f\n" +
	"\vserver_name\x18\x06 \x01(\tR\n" +
	"serverName\x12%\n" +
	"\x0ealpn_protocols\x18\a \x03(\tR\ralpnProtocols\"\xf6\x02\n" +
	"\n" +
	"AuthConfig\x125\n" +
	"\tauth_type\x18\x01 \x01(\x0e2\x18.mcp.AuthConfig.AuthTypeR\bauthType\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12!\n" +
	"\ftoken_header\x18\x03 \x01(\tR\vtokenHeader\x12)\n" +
	"\x06oauth2\x18\x04 \x01(\v2\x11.mcp.OAuth2ConfigR\x06oauth2\x12@\n" +
	"\vcustom_auth\x18\x05 \x03(\v2\x1f.mcp.AuthConfig.CustomAuthEntryR\n" +
	"customAuth\x1a=\n" +
	"\x0fCustomAuthEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\bAuthType\x12\b\n" +
	"\x04NONE\x10\x00\x12\v\n" +
	"\aAPI_KEY\x10\x01\x12\n" +
	"\n" +
	"\x06OAUTH2\x10\x02\x12\a\n" +
	"\x03JWT\x10\x03\x12\b\n" +
	"\x04MTLS\x10\x04\x12\n" +
	"\n" +
	"\x06CUSTOM\x10\x05\"\xaa\x01\n" +
	"\fOAuth2Config\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x02 \x01(\tR\fclientSecret\x12\x1b\n" +
	"\ttoken_url\x18\x03 \x01(\tR\btokenUrl\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopes\"\xb7\x01\n" +
	"\vRetryConfig\x12\x1f\n" +
	"\vmax_retries\x18\x01 \x01(\x05R\n" +
	"maxRetries\x12\"\n" +
	"\rbase_delay_ms\x18\x02 \x01(\x05R\vbaseDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x03 \x01(\x05R\n" +
	"maxDelayMs\x12\x1e\n" +
	"\n" +
	"multiplier\x18\x04 \x01(\x02R\n" +
	"multiplier\x12!\n" +
	"\fstatus_codes\x18\x05 \x03(\x05R\vstatusCodesB2Z0github.com/localrivet/gomcp/transport/grpc/protob\x06proto3"

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData []byte
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)))
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_config_proto_goTypes = []any{
	(AuthConfig_AuthType)(0), // 0: mcp.AuthConfig.AuthType
	(*TransportConfig)(nil),  // 1: mcp.TransportConfig
	(*TLSConfig)(nil),        // 2: mcp.TLSConfig
	(*AuthConfig)(nil),       // 3: mcp.AuthConfig
	(*OAuth2Config)(nil),     // 4: mcp.OAuth2Config
	(*RetryConfig)(nil),      // 5: mcp.RetryConfig
	nil,                      // 6: mcp.TransportConfig.MetadataEntry
	nil,                      // 7: mcp.TransportConfig.OptionsEntry
	nil,                      // 8: mcp.AuthConfig.CustomAuthEntry
}
var file_config_proto_depIdxs = []int32{
	2, // 0: mcp.TransportConfig.tls_config:type_name -> mcp.TLSConfig
	3, // 1: mcp.TransportConfig.auth_config:type_name -> mcp.AuthConfig
	5, // 2: mcp.TransportConfig.retry_config:type_name -> mcp.RetryConfig
	6, // 3: mcp.TransportConfig.metadata:type_name -> mcp.TransportConfig.MetadataEntry
	7, // 4: mcp.TransportConfig.options:type_name -> mcp.TransportConfig.OptionsEntry
	0, // 5: mcp.AuthConfig.auth_type:type_name -> mcp.AuthConfig.AuthType
	4, // 6: mcp.AuthConfig.oauth2:type_name -> mcp.OAuth2Config
	8, // 7: mcp.AuthConfig.custom_auth:type_name -> mcp.AuthConfig.CustomAuthEntry
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
